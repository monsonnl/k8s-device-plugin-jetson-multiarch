From c35c8dd3e9e3707f1f92ea507e1d7fb83f6e9ff5 Mon Sep 17 00:00:00 2001
From: Pablo Rodriguez <pablo.rodriguez-quesada@windriver.com>
Date: Wed, 25 Mar 2020 16:52:56 +0000
Subject: [PATCH 2/3] nvidia: Add support for tegra boards

Since Tegra boards doesn't have support for NVML, the creation of the
plugins should be different. For these boards only one GPU is available,
therefore the process is easier. It is enough by creating a device with
ID "0". All health checks are disabled for the moment.

Signed-off-by: Pablo Rodriguez <pablo.rodriguez-quesada@windriver.com>
---
 nvidia.go | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/nvidia.go b/nvidia.go
index ab3504c0..5f68e2a8 100644
--- a/nvidia.go
+++ b/nvidia.go
@@ -54,10 +54,23 @@ func NewGpuDeviceManager() *GpuDeviceManager {
 }
 
 func (g *GpuDeviceManager) Devices() []*Device {
+	var devs []*Device
+
+	// If it is a Tegra board only one GPU is available
+	if _, err := os.Stat("/sys/module/tegra_fuse/parameters/tegra_chip_id"); !os.IsNotExist(err) {
+		// On Jetson there is no way of getting an UUID, however default is 0
+		// More info : https://forums.developer.nvidia.com/t/chip-uid/48217#5100481
+		 var device = &nvml.Device{
+			UUID: "0",
+		}
+		devs = append(devs, buildDevice(device))
+		return devs
+	}
+
+
 	n, err := nvml.GetDeviceCount()
 	check(err)
 
-	var devs []*Device
 	for i := uint(0); i < n; i++ {
 		d, err := nvml.NewDeviceLite(i)
 		check(err)
@@ -96,6 +109,10 @@ func checkHealth(stop <-chan interface{}, devices []*Device, unhealthy chan<- *D
 	if strings.Contains(disableHealthChecks, "xids") {
 		return
 	}
+	// No health checks for Jetson
+	if _, err := os.Stat("/sys/module/tegra_fuse/parameters/tegra_chip_id"); !os.IsNotExist(err) {
+		return
+	}
 
 	eventSet := nvml.NewEventSet()
 	defer nvml.DeleteEventSet(eventSet)
-- 
2.17.1

